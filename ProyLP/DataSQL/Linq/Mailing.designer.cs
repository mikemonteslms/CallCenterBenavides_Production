#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.544
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallCenterDB.Linq
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.Configuration;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "GaleniaTest")]
    public partial class MailingDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Definiciones de métodos de extensibilidad
        partial void OnCreated();
        partial void Insertmailing(mailing instance);
        partial void Updatemailing(mailing instance);
        partial void Deletemailing(mailing instance);
        #endregion

        public MailingDataContext() :
            base(ConfigurationManager.ConnectionStrings["GaleniaTest"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public MailingDataContext(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public MailingDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public MailingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public MailingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<mailing> mailing
        {
            get
            {
                return this.GetTable<mailing>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.mailing")]
    public partial class mailing : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private decimal _id;

        private string _FromMail;

        private string _FromName;

        private string _ToMail;

        private string _ToName;

        private string _Subject;

        private string _CountryCode2;

        #region Definiciones de métodos de extensibilidad
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(decimal value);
        partial void OnidChanged();
        partial void OnFromMailChanging(string value);
        partial void OnFromMailChanged();
        partial void OnFromNameChanging(string value);
        partial void OnFromNameChanged();
        partial void OnToMailChanging(string value);
        partial void OnToMailChanged();
        partial void OnToNameChanging(string value);
        partial void OnToNameChanged();
        partial void OnSubjectChanging(string value);
        partial void OnSubjectChanged();
        partial void OnCountryCode2Changing(string value);
        partial void OnCountryCode2Changed();
        #endregion

        public mailing()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public decimal id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FromMail", DbType = "VarChar(100)")]
        public string FromMail
        {
            get
            {
                return this._FromMail;
            }
            set
            {
                if ((this._FromMail != value))
                {
                    this.OnFromMailChanging(value);
                    this.SendPropertyChanging();
                    this._FromMail = value;
                    this.SendPropertyChanged("FromMail");
                    this.OnFromMailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FromName", DbType = "VarChar(100)")]
        public string FromName
        {
            get
            {
                return this._FromName;
            }
            set
            {
                if ((this._FromName != value))
                {
                    this.OnFromNameChanging(value);
                    this.SendPropertyChanging();
                    this._FromName = value;
                    this.SendPropertyChanged("FromName");
                    this.OnFromNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ToMail", DbType = "VarChar(100)")]
        public string ToMail
        {
            get
            {
                return this._ToMail;
            }
            set
            {
                if ((this._ToMail != value))
                {
                    this.OnToMailChanging(value);
                    this.SendPropertyChanging();
                    this._ToMail = value;
                    this.SendPropertyChanged("ToMail");
                    this.OnToMailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ToName", DbType = "VarChar(100)")]
        public string ToName
        {
            get
            {
                return this._ToName;
            }
            set
            {
                if ((this._ToName != value))
                {
                    this.OnToNameChanging(value);
                    this.SendPropertyChanging();
                    this._ToName = value;
                    this.SendPropertyChanged("ToName");
                    this.OnToNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Subject", DbType = "VarChar(150)")]
        public string Subject
        {
            get
            {
                return this._Subject;
            }
            set
            {
                if ((this._Subject != value))
                {
                    this.OnSubjectChanging(value);
                    this.SendPropertyChanging();
                    this._Subject = value;
                    this.SendPropertyChanged("Subject");
                    this.OnSubjectChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CountryCode2", DbType = "VarChar(2)")]
        public string CountryCode2
        {
            get
            {
                return this._CountryCode2;
            }
            set
            {
                if ((this._CountryCode2 != value))
                {
                    this.OnCountryCode2Changing(value);
                    this.SendPropertyChanging();
                    this._CountryCode2 = value;
                    this.SendPropertyChanged("CountryCode2");
                    this.OnCountryCode2Changed();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
